name: Anchore Enterprise Distributed Scan

on:
  ### UNCOMMENT THIS SECTION TO AUTOBUILD ON ANY PUSH
  #push:
  #  branches:
  #    - main
  ### UNCOMMENT THIS SECTION TO BUILD ON A REGULAR SCHEDULE
  #schedule:
  #  - cron: '38 3 * * 6'
  ### UNCOMMENT THIS SECTION TO ENABLE ON-DEMAND BUILDS
  workflow_dispatch:
    inputs:
      mode:
        description: 'On-Demand Build'  
        
env:
  ANCHORECTL_URL: ${{ vars.ANCHORECTL_URL }}
  ANCHORECTL_USERNAME: ${{ vars.ANCHORECTL_USERNAME }}
  ANCHORECTL_PASSWORD: ${{ secrets.ANCHORECTL_PASSWORD }}
  ## set ANCHORECTL_FAIL_BASED_ON_RESULTS to true if you want to break the pipeline based on the evaluation
  ANCHORECTL_FAIL_BASED_ON_RESULTS: false
  ## you can enable hints file via environment or .anchorectl.yaml
  ## see https://docs.anchore.com/current/docs/overview/concepts/images/analysis/content_hints/
  ANCHORECTL_HINTS_ENABLED: true
  REGISTRY: ghcr.io
     
jobs:

  Build:
    runs-on: ubuntu-latest
    steps:
    
    - name: "Set IMAGE environmental variables"
      run: |
        echo "IMAGE=${REGISTRY}/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}" >> $GITHUB_ENV
        
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}      
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: build local container
      uses: docker/build-push-action@v3
      with:
        tags: ${{ env.IMAGE }}
        push: true
        load: false

  Anchore:
    runs-on: ubuntu-latest
    needs: Build
    steps:
    
    - name: "Set IMAGE environmental variables"
      run: |
        echo "IMAGE=${REGISTRY}/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}" >> $GITHUB_ENV
        
    - name: Checkout Code
      ### only need to do this if you want to pass the dockerfile to Anchore during scanning
      uses: actions/checkout@v3
        
    - name: Install Latest anchorectl Binary
      run: |
        curl -sSfL https://anchorectl-releases.anchore.io/anchorectl/install.sh | sh -s -- -b ${HOME}/.local/bin v5.6.0
        export PATH="${HOME}/.local/bin/:${PATH}"
                    
    - name: Generate SBOM and Push to Anchore
      run: |        
        anchorectl -vv image add --no-auto-subscribe --wait --from registry ${IMAGE}
        ### --wait is necessary if you want to immediately pull vulns or policy evaluations,
        ### --no-auto-subscribe tells anchore not to continuously poll the tag for new image pushes
        ### --from can be registry, docker, or local sbom file (omit for centralized scan)
        ### if you specify --dockerfile <file>, --force is recommended 
        ### --annotation is always optional
        ### for multi-arch images, specify (e.g.) --platform amd64 and scan each arch individually
        ### see "anchorectl image add -h" for more info
        
    - name: Pull Vulnerability List
      run: |
        anchorectl image vulnerabilities ${IMAGE} 
        
    - name: Pull Policy Evaluation
      run: |
        # set "ANCHORECTL_FAIL_BASED_ON_RESULTS=true" (see above in the "env:" section) to break the pipeline here if the 
        # policy evaluation returns FAIL or add -f, --fail-based-on-results to this command for the same result
        #
        anchorectl image check --detail ${IMAGE}

    ### If you want to archive an SBOM, uncomment the following:
    #
    #- name: Pull SBOM
    #  run: |
    #    ### change spdx-json to cyclonedx-json, syft-json etc as needed
    #    anchorectl image sbom -o spdx-json -f sbom.json ${IMAGE} 
    #
    #- name: Archive SBOM
    #  if: always()
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: spdx_sbom
    #    path: sbom.json
    #    retention-days: 14        

